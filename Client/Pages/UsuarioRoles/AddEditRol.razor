@page "/rol/crear"
@page "/rol/editar/{Id:int}"

<EditForm Model="@Rol" OnInvalidSubmit="Send">
<h1>@Titulo</h1>
<DataAnnotationsValidator/>
<ValidationSummary/>
    <div class="form-group">
        <label>Nombre</label>
        <InputText class="form-control" @bind-Value="Rol.Nombre"></InputText>
    </div>

    
    
    <button type="submit" class="mt-2 btn btn-success" @onclick="Send">Ok</button>
</EditForm>


@code
{
    [Parameter]
    public int Id { get; set; } = 0;

    public string Titulo => Id>0? "Editar rol":"Crear rol";

    public UsuarioRolUpdateRequest Rol {get; set; } = new UsuarioRolUpdateRequest();

protected override async Task OnInitializedAsync()
{
    if(Id!=0){
        var resultado = await rolesManager.GetByIdAsync(Id);
        if(resultado.Succeeded){
            Rol.Id = resultado.Data.Id;
            Rol.Nombre = resultado.Data.Nombre;
            StateHasChanged();
        }
    }
}

    public async void Send(){
        var resultado = await rolesManager.CreateAsync(Rol);

        if(resultado.Succeeded) urlHelper.NavigateTo("/roles");
    }

}