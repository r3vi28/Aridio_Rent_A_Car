@page "/vehiculo/crear"
@page "/vehiculo/editar/{Id:int}"


<EditForm Model="@Vehi" OnInvalidSubmit="Next">
<h1>@Titulo</h1>
<DataAnnotationsValidator/>
<ValidationSummary/>
    <div class="form-group">
        <label>Marca</label>
        <InputText class="form-control" @bind-Value="Vehi.Marca"></InputText>
    </div>
    <div class="form-group">
        <label>A単o</label>
        <input type="number" class="form-control" @bind ="Vehi.A単o" />
    </div>
    @* <div class="form-group">
        <label>Tipo de Vehiculo</label>
        <input type="number" class="form-control" @bind="Vehi.TipoVehiculoId" />
    </div> *@
    <div class="form-group">
        <label>Color</label>
        <InputText class="form-control" @bind-Value="Vehi.Color"></InputText>
    </div>
    <div class="form-group">
        <label>Numero de placa</label>
        <InputText class="form-control" @bind-Value="Vehi.NumeroPlaca"></InputText>
    </div>
    <div class="form-group">
        <label>Precio por dia</label>
        <input type="number" class="form-control" @bind="Vehi.PrecioPorDia" />
    </div>
    @* <div class="form-group">
        <label>Estado del Vehiculo</label>
        <input type="number" class="form-control" @bind="Vehi.EstadoVehiculoId" />
    </div> *@

    @* <button type="submit" class="mt-2 btn btn-success" @onclick="Send">Ok</button> *@
    <button type="submit" class="mt-2 btn btn-success" @onclick="Next">Siguiente</button>
</EditForm>


@code
{


    [Parameter]
    public int Id { get; set; } = 0;

    public string Titulo => Id>0? "Editar vehiculo" : "Crear vehiculo";

    public VehiculoUpdateRequest Vehi {get; set;} = new VehiculoUpdateRequest();

    public EstadoVehiculoUpdateRequest EstadoVehi {get; set;} = new EstadoVehiculoUpdateRequest();

        protected override async Task OnInitializedAsync()
        {
            
            if(Id!=0){
                var resultado = await VehiculoManager.GetByIdAsync(Id);
                if(resultado.Succeeded)
                {
                    Vehi.Id = resultado.Data.Id;
                    Vehi.Marca = resultado.Data.Marca;
                    Vehi.A単o = resultado.Data.A単o;
                    @* Vehi.TipoVehiculoId = resultado.Data.TipoVehiculoId; *@
                    Vehi.Color = resultado.Data.Color;
                    Vehi.NumeroPlaca = resultado.Data.NumeroPlaca;
                    Vehi.PrecioPorDia = resultado.Data.PrecioPorDia;
                    @* Vehi.EstadoVehiculoId = resultado.Data.EstadoVehiculoId; *@
                }
            }
        }
        
        @* public async void Send()
        {
            var resultado = await VehiculoManager.CreateAsync(Vehi);

            if(resultado.Succeeded) urlHelper.NavigateTo("/vehiculo");
        } *@

        public void Next()
        {
            urlHelper.NavigateTo("/EstadoVehiculo");
        }

}